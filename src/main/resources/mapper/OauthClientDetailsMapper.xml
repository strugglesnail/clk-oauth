<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wtf.oauth.mapper.OauthClientDetailsMapper">
  <resultMap id="BaseResultMap" type="com.wtf.oauth.po.OauthClientDetails">
    <id column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" />
    <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
    <result column="authorized_grant_types" jdbcType="VARCHAR" property="authorizedGrantTypes" />
    <result column="web_server_redirect_uri" jdbcType="VARCHAR" property="webServerRedirectUri" />
    <result column="authorities" jdbcType="VARCHAR" property="authorities" />
    <result column="access_token_validity" jdbcType="INTEGER" property="accessTokenValidity" />
    <result column="refresh_token_validity" jdbcType="INTEGER" property="refreshTokenValidity" />
    <result column="additional_information" jdbcType="VARCHAR" property="additionalInformation" />
    <result column="autoapprove" jdbcType="VARCHAR" property="autoapprove" />
  </resultMap>
  <sql id="oauth_client_detailsColumns">
    <![CDATA[ client_id,resource_ids,client_secret,scope,authorized_grant_types,web_server_redirect_uri,authorities,access_token_validity,refresh_token_validity,additional_information,autoapprove ]]>
  </sql>
  <sql id="oauth_client_detailsDynamicWhere">
    <where>
      <if test="null != clientId and '' !=  clientId">and client_id = #{ clientId}</if>
      <if test="null != resourceIds and '' !=  resourceIds">and resource_ids = #{ resourceIds}</if>
      <if test="null != clientSecret and '' !=  clientSecret">and client_secret = #{ clientSecret}</if>
      <if test="null != scope and '' !=  scope">and scope = #{ scope}</if>
      <if test="null != authorizedGrantTypes and '' !=  authorizedGrantTypes">and authorized_grant_types = #{ authorizedGrantTypes}</if>
      <if test="null != webServerRedirectUri and '' !=  webServerRedirectUri">and web_server_redirect_uri = #{ webServerRedirectUri}</if>
      <if test="null != authorities and '' !=  authorities">and authorities = #{ authorities}</if>
      <if test="null != accessTokenValidity and '' !=  accessTokenValidity">and access_token_validity = #{ accessTokenValidity}</if>
      <if test="null != refreshTokenValidity and '' !=  refreshTokenValidity">and refresh_token_validity = #{ refreshTokenValidity}</if>
      <if test="null != additionalInformation and '' !=  additionalInformation">and additional_information = #{ additionalInformation}</if>
      <if test="null != autoapprove and '' !=  autoapprove">and autoapprove = #{ autoapprove}</if>
	</where>
  </sql>
  <sql id="oauth_client_detailsDynamicLikeWhere">
    <where>
      <if test="null != clientId and '' !=  clientId">and client_id LIKE #{ clientId}</if>
      <if test="null != resourceIds and '' !=  resourceIds">and resource_ids LIKE #{ resourceIds}</if>
      <if test="null != clientSecret and '' !=  clientSecret">and client_secret LIKE #{ clientSecret}</if>
      <if test="null != scope and '' !=  scope">and scope LIKE #{ scope}</if>
      <if test="null != authorizedGrantTypes and '' !=  authorizedGrantTypes">and authorized_grant_types LIKE #{ authorizedGrantTypes}</if>
      <if test="null != webServerRedirectUri and '' !=  webServerRedirectUri">and web_server_redirect_uri LIKE #{ webServerRedirectUri}</if>
      <if test="null != authorities and '' !=  authorities">and authorities LIKE #{ authorities}</if>
      <if test="null != accessTokenValidity and '' !=  accessTokenValidity">and access_token_validity LIKE #{ accessTokenValidity}</if>
      <if test="null != refreshTokenValidity and '' !=  refreshTokenValidity">and refresh_token_validity LIKE #{ refreshTokenValidity}</if>
      <if test="null != additionalInformation and '' !=  additionalInformation">and additional_information LIKE #{ additionalInformation}</if>
      <if test="null != autoapprove and '' !=  autoapprove">and autoapprove LIKE #{ autoapprove}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="oauth_client_detailsColumns" /> from  `oauth_client_details` where client_id = #{clientId}
  </select>
  <select id="getOne" parameterType="com.wtf.oauth.po.OauthClientDetails" resultMap="BaseResultMap">
    select <include refid="oauth_client_detailsColumns" /> from  `oauth_client_details` <include refid="oauth_client_detailsDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="oauth_client_detailsColumns" /> from  `oauth_client_details` <include refid="oauth_client_detailsDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="oauth_client_detailsColumns" /> from  `oauth_client_details` <include refid="oauth_client_detailsDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="oauth_client_detailsColumns" /> from  `oauth_client_details` <include refid="oauth_client_detailsDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.wtf.oauth.po.OauthClientDetails" resultType="java.lang.Long">
    select count(1) from `oauth_client_details` <include refid="oauth_client_detailsDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.wtf.oauth.po.OauthClientDetails" resultType="java.lang.Long">
    select count(1) from `oauth_client_details` <include refid="oauth_client_detailsDynamicWhere" />
  </select>
  <sql id="save_oauth_client_details_columns">
    insert into `oauth_client_details`(
		client_id ,resource_ids ,client_secret ,scope ,authorized_grant_types ,web_server_redirect_uri ,authorities ,access_token_validity ,refresh_token_validity ,additional_information ,autoapprove
	) values
  </sql>
  <sql id="save_oauth_client_details_values">
    (
	  #{ clientId,jdbcType=VARCHAR},
	  #{ resourceIds,jdbcType=VARCHAR},
	  #{ clientSecret,jdbcType=VARCHAR},
	  #{ scope,jdbcType=VARCHAR},
	  #{ authorizedGrantTypes,jdbcType=VARCHAR},
	  #{ webServerRedirectUri,jdbcType=VARCHAR},
	  #{ authorities,jdbcType=VARCHAR},
	  #{ accessTokenValidity,jdbcType=INTEGER},
	  #{ refreshTokenValidity,jdbcType=INTEGER},
	  #{ additionalInformation,jdbcType=VARCHAR},
	  #{ autoapprove,jdbcType=VARCHAR}
	)
  </sql>
  <insert id="save" keyProperty="clientId" parameterType="com.wtf.oauth.po.OauthClientDetails" useGeneratedKeys="true">
    <include refid="save_oauth_client_details_columns" /><include refid="save_oauth_client_details_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_oauth_client_details_columns" /><include refid="save_oauth_client_details_values" />
	</foreach>
  </insert>
  <sql id="oauth_client_detailsUpdate">
    update `oauth_client_details` 
	<set> 
      <if test="null != clientId">client_id = #{ clientId,jdbcType=VARCHAR},</if>
      <if test="null != resourceIds">resource_ids = #{ resourceIds,jdbcType=VARCHAR},</if>
      <if test="null != clientSecret">client_secret = #{ clientSecret,jdbcType=VARCHAR},</if>
      <if test="null != scope">scope = #{ scope,jdbcType=VARCHAR},</if>
      <if test="null != authorizedGrantTypes">authorized_grant_types = #{ authorizedGrantTypes,jdbcType=VARCHAR},</if>
      <if test="null != webServerRedirectUri">web_server_redirect_uri = #{ webServerRedirectUri,jdbcType=VARCHAR},</if>
      <if test="null != authorities">authorities = #{ authorities,jdbcType=VARCHAR},</if>
      <if test="null != accessTokenValidity">access_token_validity = #{ accessTokenValidity,jdbcType=INTEGER},</if>
      <if test="null != refreshTokenValidity">refresh_token_validity = #{ refreshTokenValidity,jdbcType=INTEGER},</if>
      <if test="null != additionalInformation">additional_information = #{ additionalInformation,jdbcType=VARCHAR},</if>
      <if test="null != autoapprove">autoapprove = #{ autoapprove,jdbcType=VARCHAR}</if>
	</set>
	where client_id = #{clientId}
  </sql>
  <update id="update" parameterType="com.wtf.oauth.po.OauthClientDetails">
    <include refid="oauth_client_detailsUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="oauth_client_detailsUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from `oauth_client_details` where client_id = #{client_id} ]]>
  </delete>
  <delete id="delArray">
    delete from `oauth_client_details` where client_id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from `oauth_client_details` where client_id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>